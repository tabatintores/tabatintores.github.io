{"version":3,"sources":["HOC/Layout/Layout.js","components/ArticlesList/ArticlesItems/ArticlesItems.js","components/ArticlesList/ArticlesList.js","components/ArticlePage/ArticleComments/ArticleComments.js","components/ArticlePage/ArticlePage.js","components/ArticleCreator/ArticleCreatorForm/ArticleCreatorForm.js","components/ArticleCreator/ArticleCreator.js","components/ArticleEditor/ArticleEditor.js","App.js","serviceWorker.js","index.js"],"names":["Layout","props","className","to","href","target","children","ArticlesItems","useState","isEmpty","isEmptySet","JSON","parse","localStorage","listArticles","list","setListArticles","useEffect","setItem","stringify","length","map","item","key","id","title","comments","description","onClick","filter","ArticlesList","ArticleComments","src","alt","ArticlePage","article","articleId","match","params","document","date","text","ArticleCreatorForm","setTitle","setDescription","setText","onSubmit","e","preventDefault","type","placeholder","minLength","maxLength","onChange","value","required","rows","ArticleCreator","getItem","push","Date","toLocaleDateString","history","ArticleEditor","editArticleHandler","onInput","App","exact","path","component","Boolean","window","location","hostname","app","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.34404bf6.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './Layout.css';\r\n\r\nconst Layout = props => {\r\n    return (\r\n        <div className=\"Layout\">\r\n            <div className=\"Layout-Nav container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-10 Layout-Nav-Title\">\r\n                        <NavLink to='/'>\r\n                            Blog for Hybrid.ai\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className=\"col-2 Layout-Nav-Buttons\">\r\n                        \r\n                        <NavLink to='/'>\r\n                            <i className=\"fas fa-home\"/>\r\n                        </NavLink>\r\n                        \r\n                        <NavLink to='/create-article'>\r\n                            <i className=\"fas fa-plus\"/>\r\n                        </NavLink>\r\n\r\n                        <a href=\"https://github.com/tabatintores/\" target='_blank'>\r\n                            <i className=\"fab fa-github\"/>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Layout;","import React, {useState, useEffect} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst ArticlesItems = props => {\r\n\r\n    let [isEmpty, isEmptySet] = useState();\r\n    const [listArticles, setListArticles] = useState(JSON.parse(localStorage.listArticles).list);\r\n\r\n    const deleteArticleHandler = id => {\r\n        setListArticles(listArticles.filter((item) => {\r\n            return (item.id !== id)\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('listArticles', JSON.stringify({'list': listArticles}));\r\n        isEmptySet(listArticles.length === 0 ? true : false)\r\n    });\r\n\r\n    return (\r\n        !isEmpty ?\r\n            listArticles.map(item => {\r\n                    return (\r\n                        <div className=\"row\" key={item.id}>\r\n                            <div className=\"col-3\">\r\n                                <NavLink\r\n                                    to={`/article/${item.id}`}\r\n                                    className='Article-NavTitle'\r\n                                >\r\n                                    {item.title}\r\n                                </NavLink>\r\n                            </div>\r\n\r\n                            <div className=\"col-2\"><i className=\"fas fa-comment\"/> {item.comments}</div>\r\n                            <div className=\"col-5 ArticlesList-Description\">{item.description}</div>\r\n                            <div className=\"col-2 ArticlesList-Actions\">\r\n\r\n                                <NavLink to={`/edit-article/${item.id}`}>\r\n                                    <i className=\"fas fa-pen text-dark\" title='Редактировать'/>\r\n                                </NavLink>\r\n\r\n                                <i\r\n                                    className=\"fas fa-times text-danger\"\r\n                                    title='Удалить'\r\n                                    onClick={() => {\r\n                                        deleteArticleHandler(item.id)\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            ) : null\r\n    )\r\n\r\n}\r\n\r\nexport default ArticlesItems","import React from 'react';\r\nimport ArticlesItems from \"./ArticlesItems/ArticlesItems\";\r\nimport {NavLink} from 'react-router-dom'\r\nimport './ArticlesList.css'\r\n\r\nconst ArticlesList = props => {\r\n    return (\r\n        <div className='ArticlesList container-fluid'>\r\n            <h2>Список статей:</h2>\r\n            <div className=\"row ArticlesList-Title\">\r\n                <div className=\"col-3\">Заголовок</div>\r\n                <div className=\"col-2\">Комментариев</div>\r\n                <div className=\"col-5\">Описание</div>\r\n                <div className=\"col-2\">Действие</div>\r\n            </div>\r\n            <ArticlesItems/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArticlesList;","import React from 'react';\r\nimport './ArticleComments.css'\r\n\r\nconst ArticleComments = props => {\r\n    return (\r\n        <div className='ArticleComments'>\r\n            <h3>Комментарии (1):</h3>\r\n            <div className=\"media\">\r\n                <img src=\"https://picsum.photos/64/64?random=1\" className=\"mr-3\" alt=\"...\"/>\r\n                    <div className=\"media-body\">\r\n                        <h5 className=\"mt-0\">user666</h5>\r\n                        Довольно-таки годная статья! Автору печенек!\r\n                    </div>\r\n            </div>\r\n            <div className=\"media\">\r\n                <img src=\"https://picsum.photos/64/64?random\" className=\"mr-3\" alt=\"...\"/>\r\n                <div className=\"media-body\">\r\n                    <h5 className=\"mt-0\">Media heading</h5>\r\n                    Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras\r\n                    purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi\r\n                    vulputate fringilla. Donec lacinia congue felis in faucibus.\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ArticleComments;\r\n","import React from 'react';\r\nimport './ArticlePage.css';\r\nimport ArticleComments from \"./ArticleComments/ArticleComments\";\r\n\r\nconst ArticlePage = props => {\r\n    let article = {};\r\n    const articleId = props.match.params.id;\r\n    const listArticles = JSON.parse(localStorage.listArticles).list;\r\n    for (let item of listArticles) {\r\n        if (item.id == articleId) {\r\n            article = item;\r\n            break;\r\n        }\r\n    }\r\n    document.title=article.title;\r\n\r\n    return (\r\n        <div className=\"ArticlePage container-fluid\">\r\n            <h1 className='ArticlePage-Title'>{article.title}</h1>\r\n            <p className='ArticlePage-Description'>\r\n                <i className=\"far fa-calendar-alt\"/> &nbsp;\r\n                {article.date} - {article.description}\r\n            </p>\r\n            <p className='ArticlePage-Text'>{article.text}</p>\r\n            <hr/>\r\n            <ArticleComments/>\r\n            <hr/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ArticlePage;","import React,{useState} from 'react';\r\n\r\nconst ArticleCreatorForm = props => {\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [text, setText] = useState('');\r\n    return(\r\n        <form onSubmit={(e) => {\r\n            e.preventDefault();\r\n            props.onSubmit(title, description, text);\r\n        }}>\r\n            <div className=\"input-group mb-1\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Тема\"\r\n                    minLength={5}\r\n                    maxLength={50}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    required\r\n                />\r\n                <div className=\"input-group-prepend\">\r\n                    <input\r\n                        className=\"btn btn-success\"\r\n                        type=\"submit\"\r\n                        value='Создать'\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"input-group mb-1\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Краткое описание\"\r\n                    minLength={5}\r\n                    maxLength={100}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    required\r\n                />\r\n            </div>\r\n            <div className=\"input-group mb-1\">\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        placeholder=\"Текст\"\r\n                        rows={7}\r\n                        minLength={10}\r\n                        maxLength={5000}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                        required\r\n                    />\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default ArticleCreatorForm;","import React from 'react';\r\nimport ArticleCreatorForm from \"./ArticleCreatorForm/ArticleCreatorForm\";\r\nimport './ArticleCreator.css'\r\n\r\nconst ArticleCreator = props => {\r\n\r\n    const createArticleHandler = (title, description, text) => {\r\n\r\n        if (!localStorage.getItem('listArticles')) {\r\n            localStorage.setItem('listArticles', JSON.stringify({'list': []}));\r\n        }\r\n\r\n        const listArticles = JSON.parse(localStorage.listArticles).list;\r\n\r\n        listArticles.push({\r\n            id: listArticles.length,\r\n            title,\r\n            description,\r\n            text,\r\n            comments: 0,\r\n            date: new Date().toLocaleDateString()\r\n        });\r\n        localStorage.setItem('listArticles', JSON.stringify({'list': listArticles}));\r\n        props.history.push('/');\r\n    };\r\n    return (\r\n        <div className='ArticleCreator container'>\r\n            <h1>Создать статью:</h1>\r\n            <hr/>\r\n            <ArticleCreatorForm\r\n                onSubmit={createArticleHandler}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ArticleCreator;","import React,{useState} from 'react';\r\n\r\nconst ArticleEditor = props => {\r\n\r\n    const listArticles = JSON.parse(localStorage.listArticles).list;\r\n    let article = {};\r\n    for (let item of listArticles) {\r\n        if (item.id == props.match.params.id) {\r\n            article = item;\r\n            break;\r\n        }\r\n    }\r\n    const [title, setTitle] = useState(article.title);\r\n    const [description, setDescription] = useState(article.description);\r\n    const [text, setText] = useState(article.text);\r\n\r\n    const editArticleHandler = (title,description,text) => {\r\n\r\n        article.title = title;\r\n        article.description = description;\r\n        article.text = text;\r\n\r\n        for (let item of listArticles) {\r\n            if (item.id == props.match.params.id) {\r\n                item = article;\r\n                break;\r\n            }\r\n        }\r\n        localStorage.setItem('listArticles', JSON.stringify({'list': listArticles}));\r\n        props.history.push('/');\r\n    };\r\n\r\n    return (\r\n        <div className='ArticleCreator container'>\r\n            <h1>Редактировать статью:</h1>\r\n            <hr/>\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                editArticleHandler(title, description, text);\r\n            }}>\r\n                <div className=\"input-group mb-1\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Тема\"\r\n                        minLength={5}\r\n                        maxLength={50}\r\n                        value={title}\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                        required\r\n                    />\r\n                    <div className=\"input-group-prepend\">\r\n                        <input\r\n                            className=\"btn btn-primary\"\r\n                            type=\"submit\"\r\n                            value='Сохранить'\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"input-group mb-1\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Краткое описание\"\r\n                        minLength={5}\r\n                        maxLength={100}\r\n                        value={description}\r\n                        onInput={(e) => setDescription(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"input-group mb-1\">\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        placeholder=\"Текст\"\r\n                        rows={7}\r\n                        minLength={10}\r\n                        maxLength={5000}\r\n                        value={text}\r\n                        onInput={(e) => setText(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ArticleEditor;","import React from 'react';\nimport Layout from \"./HOC/Layout/Layout\";\nimport {Route, Switch} from 'react-router-dom'\nimport ArticlesList from \"./components/ArticlesList/ArticlesList\";\nimport ArticlePage from \"./components/ArticlePage/ArticlePage\";\nimport ArticleCreator from \"./components/ArticleCreator/ArticleCreator\";\nimport ArticleEditor from \"./components/ArticleEditor/ArticleEditor\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout>\n          <Switch>\n              <Route exact path='/' component={ArticlesList}/>\n              <Route path='/article/:id' component={ArticlePage}/>\n              <Route exact path='/create-article' component={ArticleCreator}/>\n              <Route exact path='/edit-article/:id' component={ArticleEditor}/>\n          </Switch>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nconst app = (\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}