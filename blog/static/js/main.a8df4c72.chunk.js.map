{"version":3,"sources":["HOC/Layout/Layout.js","components/ArticlesList/ArticlesItems/ArticlesItems.js","components/ArticlesList/ArticlesList.js","components/ArticlePage/ArticleComments/ArticleCommentAdd/ArticleCommentAdd.js","components/ArticlePage/ArticleComments/ArticleComments.js","components/ArticlePage/ArticlePage.js","components/ArticleCreator/ArticleCreatorForm/ArticleCreatorForm.js","components/ArticleCreator/ArticleCreator.js","components/ArticleEditor/ArticleEditor.js","App.js","serviceWorker.js","index.js"],"names":["Layout","props","className","to","href","target","rel","children","ArticlesItems","useState","JSON","parse","localStorage","listArticles","list","setListArticles","isEmpty","length","useEffect","setItem","stringify","map","item","id","title","description","comments","key","onClick","filter","deleteArticleHandler","ArticlesList","document","ArticleCommentAdd","author","setAuthor","comment","setComment","onSubmit","e","preventDefault","onAdd","htmlFor","type","minLength","maxLength","value","onChange","required","rows","ArticleComments","article","src","alt","text","deleteCommentHandler","aria-hidden","push","ArticlePage","match","params","date","setTimeout","history","ArticleCreatorForm","setTitle","setDescription","setText","placeholder","ArticleCreator","getItem","newArticle","Date","toLocaleDateString","ArticleEditor","editArticleHandler","App","exact","path","component","Boolean","window","location","hostname","app","basename","process","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a8df4c72.chunk.js","sourcesContent":["//Компонент высшего порядка\r\nimport React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './Layout.css';\r\n\r\nconst Layout = props => {\r\n    return (\r\n        <div className=\"Layout\">\r\n            <div className=\"Layout-Nav container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-10 Layout-Nav-Title\">\r\n                        <NavLink to='/'>\r\n                            Blog for hybrid.ai\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className=\"col-2 Layout-Nav-Buttons\">\r\n                        \r\n                        <NavLink to='/'>\r\n                            <i className=\"fas fa-home\"/>\r\n                        </NavLink>\r\n                        \r\n                        <NavLink to='/create-article'>\r\n                            <i className=\"fas fa-plus\"/>\r\n                        </NavLink>\r\n\r\n                        <a href=\"https://github.com/tabatintores/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <i className=\"fab fa-github\"/>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <hr/>\r\n\r\n            {props.children}\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Layout;","//Компонент для распаковки статей из localStorage на главной странице\r\nimport React,{useState, useEffect} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './ArticlesItems.css';\r\n\r\nconst ArticlesItems = props => {\r\n\r\n    //Массив статей в localStorage\r\n    const [listArticles, setListArticles] = useState(JSON.parse(localStorage.listArticles).list);\r\n\r\n    //Проверка на наличие статей в localStorage\r\n    let isEmpty = listArticles.length === 0;\r\n\r\n    //Удаление статьи из массива по id\r\n    const deleteArticleHandler = id => {\r\n\r\n        //Фильтрация массива статей и сохранение в состояние\r\n        setListArticles(listArticles.filter((item) => {\r\n            return (item.id !== id)\r\n        }));\r\n\r\n    };\r\n\r\n    //Обновление компонента при удалении статей\r\n    useEffect(() => {\r\n        localStorage.setItem('listArticles', JSON.stringify({'list': listArticles}));\r\n    });\r\n\r\n    return (\r\n        !isEmpty ?\r\n            listArticles.map(item => {\r\n                const {id,title,description,comments} = item\r\n                    return (\r\n                        <div className=\"ArticleItem\" key={id}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-3\">\r\n                                    <NavLink\r\n                                        to={`/article/${id}`}\r\n                                        className='Article-NavTitle'\r\n                                    >\r\n                                        {title}\r\n                                    </NavLink>\r\n                                </div>\r\n\r\n                                <div className=\"col-sm-2\"><i className=\"fas fa-comment\"/> {comments.length}</div>\r\n                                <div className=\"col-sm-5 ArticleItem-Description\">{description}</div>\r\n                                <div className=\"col-sm-2 ArticleItem-Actions\">\r\n\r\n                                    <NavLink to={`/edit-article/${id}`}>\r\n                                        <i className=\"fas fa-pen text-dark\" title='Редактировать'/>\r\n                                    </NavLink>\r\n\r\n                                    <i\r\n                                        className=\"fas fa-times text-danger\"\r\n                                        title='Удалить'\r\n                                        onClick={() => deleteArticleHandler(id)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            ) : null\r\n    )\r\n};\r\n\r\nexport default ArticlesItems;","//Компонент для вывода списка всех статей\r\nimport React from 'react';\r\nimport ArticlesItems from \"./ArticlesItems/ArticlesItems\";\r\nimport './ArticlesList.css'\r\n\r\nconst ArticlesList = props => {\r\n\r\n    document.title = 'Hybrid Blog';\r\n\r\n    return (\r\n        <div className='ArticlesList container-fluid'>\r\n            <h2>Список статей:</h2>\r\n            <div className=\"row ArticlesList-Title\">\r\n                <div className=\"col-sm-3\">Заголовок</div>\r\n                <div className=\"col-sm-2\">Комментариев</div>\r\n                <div className=\"col-sm-5\">Описание</div>\r\n                <div className=\"col-sm-2\">Действие</div>\r\n            </div>\r\n            <ArticlesItems/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ArticlesList;","//Компонент с формой добавления статьи\r\nimport React,{useState} from 'react';\r\nimport './ArticleCommentAdd.css'\r\n\r\nconst ArticleCommentAdd = props => {\r\n\r\n    //Состояние для обработки введённых данных в форму добавления комментария\r\n    const [author,setAuthor] = useState('');\r\n    const [comment,setComment] = useState('');\r\n\r\n    return (\r\n        <div className='ArticleCommentAdd'>\r\n            <h4>Добавить комментарий:</h4>\r\n            <div className=\"ArticleCommentAdd-Form\">\r\n                <form\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        props.onAdd(author,comment);\r\n                        setAuthor('');\r\n                        setComment('');\r\n                    }}\r\n                >\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"author\" className='col-sm-2 col-form-label'>Имя</label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className='form-control'\r\n                                id='author'\r\n                                minLength={3}\r\n                                maxLength={15}\r\n                                value={author}\r\n                                onChange={(e) => setAuthor(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"text\" className='col-sm-2 col-form-label'>Текст</label>\r\n                        <div className=\"col-sm-10\">\r\n                            <textarea\r\n                                className='form-control'\r\n                                id='text'\r\n                                minLength={10}\r\n                                maxLength={150}\r\n                                value={comment}\r\n                                rows={5}\r\n                                onChange={(e) => setComment(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"\" className='col-sm-2 col-form-label'></label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className='form-control btn btn-primary'\r\n                                id='name'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ArticleCommentAdd;","//Компонент для отображения комментариев и формы добавления\r\nimport React,{useEffect, useState} from 'react';\r\nimport ArticleCommentAdd from \"./ArticleCommentAdd/ArticleCommentAdd\";\r\nimport './ArticleComments.css'\r\n\r\nconst ArticleComments = props => {\r\n\r\n    //Объект открытой статьи из props\r\n    let {article} = props;\r\n\r\n    //Состояние для работы со списком статей\r\n    const [listArticles, setListArticles] = useState(JSON.parse(localStorage.listArticles).list);\r\n\r\n    //Метод добавления комментария\r\n    const addCommentHandler = (author,comment) => {\r\n\r\n        //Добавление данных в текущую статью\r\n        article.comments.push({\r\n            id: article.comments.length,\r\n            author,\r\n            comment\r\n        });\r\n\r\n        //Передача в состояние изменённой статьи с новым комментарием\r\n        setListArticles(\r\n            listArticles.map(item => {\r\n                if (item.id === article.id) {\r\n                    return article\r\n                } else {\r\n                    return item\r\n                }\r\n            })\r\n        );\r\n\r\n    };\r\n\r\n    //Метод удаления комментария по его id\r\n    const deleteCommentHandler = id => {\r\n\r\n        //Фильтрация комментариев текущей статьи\r\n        article.comments = article.comments.filter((item) => {\r\n            return item.id !== id;\r\n        });\r\n\r\n        //Передача в состояние изменённой статьи с новым комментарием\r\n        setListArticles(\r\n            listArticles.map(item => {\r\n                if (item.id === article.id) {\r\n                    return article\r\n                } else {\r\n                    return item\r\n                }\r\n            })\r\n        );\r\n    };\r\n\r\n    //Хук для сохранения изменённого объекта в localStorage\r\n    useEffect(() => {\r\n        localStorage.setItem('listArticles', JSON.stringify({'list': listArticles}));\r\n    });\r\n\r\n    return (\r\n        <div className='ArticleComments'>\r\n            <h3>Комментарии ({article.comments.length}):</h3>\r\n            {\r\n                article.comments.map((item) => {\r\n                    const {id,author,comment} = item\r\n                    return (\r\n                        <div className=\"media\" key={id}>\r\n                            <img src={`https://picsum.photos/64/?random=${id}`} className=\"mr-3\" alt={item.text}/>\r\n                                <div className=\"media-body\">\r\n                                    <h5 className=\"mt-0\">{author}</h5>\r\n                                    {comment}\r\n                                </div>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"close\"\r\n                                onClick={() => deleteCommentHandler(item.id)}\r\n                            >\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                    );\r\n                })\r\n            }\r\n            <ArticleCommentAdd\r\n                onAdd={addCommentHandler}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ArticleComments;\r\n","//Компонент для просмотра статьи\r\nimport React,{useState,useEffect} from 'react';\r\nimport './ArticlePage.css';\r\nimport ArticleComments from \"./ArticleComments/ArticleComments\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst ArticlePage = props => {\r\n\r\n    //Парсинг статей из localStorage\r\n    const [listArticles, setListArticles] = useState(JSON.parse(localStorage.listArticles).list);\r\n\r\n    //Присваивание переменной article состояния объекта текущей статьи\r\n    let [article] = useState(() => {\r\n        for (let item of listArticles) {\r\n            if (item.id === +props.match.params.id) {\r\n                return item;\r\n            }\r\n        }\r\n    });\r\n\r\n    //Метод для удаления статьи из localStorage по id\r\n    const deleteArticleHandler = id => {\r\n\r\n        //Фильтрация массива статей и передача его в состояние списка статей\r\n        setListArticles(listArticles.filter((item) => {\r\n            return (item.id !== id)\r\n        }));\r\n\r\n        //Редирект на главную страницу после удаления через 1 секунду\r\n        setTimeout(() => {\r\n            props.history.push(`/`);\r\n        }, 1000)\r\n    };\r\n\r\n    //Хук для сохранения изменённого объекта в localStorage\r\n    useEffect(() => {\r\n        localStorage.setItem('listArticles', JSON.stringify({'list': listArticles}));\r\n    });\r\n\r\n    document.title=article.title;\r\n\r\n    const {id,title,description,text,date} = article\r\n\r\n    return (\r\n        <div className=\"ArticlePage container-fluid\">\r\n            <h1 className='ArticlePage-Title'>\r\n\r\n                {title}\r\n                <NavLink to={`/edit-article/${id}`}>\r\n                    <i className=\"fas fa-pen text-dark\" title='Редактировать'/>\r\n                </NavLink>\r\n                <i\r\n                    className=\"fas fa-times text-danger\"\r\n                    title='Удалить'\r\n                    onClick={() => deleteArticleHandler(id)}\r\n                />\r\n\r\n            </h1>\r\n            <p className='ArticlePage-Description'>\r\n                <i className=\"far fa-calendar-alt\"/> &nbsp;\r\n                {date} - {description}\r\n            </p>\r\n            <p className='ArticlePage-Text'>{text}</p>\r\n            <hr/>\r\n            <ArticleComments\r\n                article={article}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ArticlePage;","//Компонент с формой создания статьи\r\nimport React, {useState} from 'react';\r\n\r\nconst ArticleCreatorForm = props => {\r\n\r\n    //Состояния для обработки ввода из формы и передачи в метод создания статьи\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <form\r\n            onSubmit={(e) => {\r\n                e.preventDefault();\r\n                props.onSubmit(title, description, text);\r\n            }}\r\n        >\r\n            <div className=\"input-group mb-1\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Заголовок\"\r\n                    minLength={5}\r\n                    maxLength={75}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    required\r\n                />\r\n                <div className=\"input-group-prepend\">\r\n                    <input\r\n                        className=\"btn btn-success\"\r\n                        type=\"submit\"\r\n                        value='Создать'\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"input-group mb-1\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Краткое описание\"\r\n                    minLength={5}\r\n                    maxLength={150}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    required\r\n                />\r\n            </div>\r\n            <div className=\"input-group mb-1\">\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        placeholder=\"Текст\"\r\n                        rows={7}\r\n                        minLength={10}\r\n                        maxLength={5000}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                        required\r\n                    />\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default ArticleCreatorForm;","//Компонент для создания статьи\r\nimport React from 'react';\r\nimport ArticleCreatorForm from \"./ArticleCreatorForm/ArticleCreatorForm\";\r\nimport './ArticleCreator.css'\r\n\r\nconst ArticleCreator = props => {\r\n\r\n    //Метод для генерации id новой статьи\r\n    const getArticleId = list => {\r\n        //Если статьи уже имеются, то возвращается +1 от id последней статьи\r\n        if (list[0]) return list[list.length-1].id+1;\r\n        //Если нет, то возвращается 0\r\n        return 0;\r\n    };\r\n\r\n    //Метод для создания статьи в массиве LS с параметрами из формы\r\n    const createArticleHandler = (title, description, text) => {\r\n\r\n        //Создание массива со статьями в случае его отсутствия\r\n        if (!localStorage.getItem('listArticles')) {\r\n            localStorage.setItem('listArticles', JSON.stringify({'list': []}));\r\n        }\r\n\r\n        //Парсинг статей из localStorage\r\n        const listArticles = JSON.parse(localStorage.listArticles).list;\r\n\r\n        //Новая статья\r\n        const newArticle = {\r\n            id: getArticleId(listArticles),\r\n            title,\r\n            description,\r\n            text,\r\n            comments: [],\r\n            date: new Date().toLocaleDateString()\r\n        };\r\n\r\n        //Добавление новой статьи в массив со статьями\r\n        listArticles.push(newArticle);\r\n\r\n        //Сохранение массива с новой статьёй в localStorage\r\n        localStorage.setItem('listArticles', JSON.stringify({'list': listArticles}));\r\n\r\n        //Возвращение на страницу статьи после создания\r\n        props.history.push(`/article/${newArticle.id}`);\r\n    };\r\n\r\n    document.title = 'Создать статью';\r\n    return (\r\n        <div className='ArticleCreator container'>\r\n            <h1>Создать статью:</h1>\r\n            <hr/>\r\n            <ArticleCreatorForm\r\n                onSubmit={createArticleHandler}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ArticleCreator;","//Компонент для редактирования статьи\r\nimport React, {useState} from 'react';\r\nimport './ArticleEditor.css';\r\n\r\nconst ArticleEditor = props => {\r\n\r\n    //Парсинг статей из localStorage\r\n    const listArticles = JSON.parse(localStorage.listArticles).list;\r\n\r\n    //Создание переменной текущей статьи и присваивание ей объекта текущей статьи\r\n    let article = {};\r\n    for (let item of listArticles) {\r\n        if (item.id === +props.match.params.id) {\r\n            article = item;\r\n            break;\r\n        }\r\n    }\r\n\r\n    //Состояния для обработки ввода из формы и передачи в метод сохранения статьи\r\n    const [title, setTitle] = useState(article.title);\r\n    const [description, setDescription] = useState(article.description);\r\n    const [text, setText] = useState(article.text);\r\n\r\n    //Метод присваивания текущей статье параметров и сохранение в localStorage\r\n    const editArticleHandler = (title, description, text) => {\r\n\r\n        article.title = title;\r\n        article.description = description;\r\n        article.text = text;\r\n\r\n        //Сохранение объекта с новыми свойствами в массиве\r\n        for (let item of listArticles) {\r\n            if (item.id === +props.match.params.id) {\r\n                item = article;\r\n                break;\r\n            }\r\n        }\r\n\r\n        //Сохранение массива с обновлённой статьёй в localStorage\r\n        localStorage.setItem('listArticles', JSON.stringify({'list': listArticles}));\r\n\r\n        //Возвращение на страницу статьи после сохранения\r\n        props.history.push(`/article/${article.id}`);\r\n    };\r\n\r\n    document.title = 'Редактировать статью';\r\n    return (\r\n        <div className='ArticleEditor container'>\r\n            <h1>Редактировать статью:</h1>\r\n            <hr/>\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                editArticleHandler(title, description, text);\r\n            }}>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"title\" className=\"col-sm-2 col-form-label\">Тема</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Тема\"\r\n                            minLength={5}\r\n                            maxLength={50}\r\n                            value={title}\r\n                            onChange={(e) => setTitle(e.target.value)}\r\n                            id=\"title\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"description\" className=\"col-sm-2 col-form-label\">Описание</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Краткое описание\"\r\n                            minLength={5}\r\n                            maxLength={100}\r\n                            value={description}\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                            id=\"description\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"text\" className=\"col-sm-2 col-form-label\">Текст</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <textarea\r\n                            className=\"form-control\"\r\n                            placeholder=\"Текст\"\r\n                            rows={7}\r\n                            minLength={10}\r\n                            maxLength={5000}\r\n                            value={text}\r\n                            onChange={(e) => setText(e.target.value)}\r\n                            id='text'\r\n                            required\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <input\r\n                        className=\"btn btn-primary\"\r\n                        type=\"submit\"\r\n                        value='Сохранить'\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ArticleEditor;","import React from 'react';\nimport Layout from \"./HOC/Layout/Layout\";\nimport {Route, Switch} from 'react-router-dom'\nimport ArticlesList from \"./components/ArticlesList/ArticlesList\";\nimport ArticlePage from \"./components/ArticlePage/ArticlePage\";\nimport ArticleCreator from \"./components/ArticleCreator/ArticleCreator\";\nimport ArticleEditor from \"./components/ArticleEditor/ArticleEditor\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout>\n          <Switch>\n              <Route exact path='/' component={ArticlesList}/>\n              <Route path='/article/:id' component={ArticlePage}/>\n              <Route path='/create-article' component={ArticleCreator}/>\n              <Route path='/edit-article/:id' component={ArticleEditor}/>\n          </Switch>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nconst app = (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <App/>\n    </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}