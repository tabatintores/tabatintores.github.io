{"version":3,"sources":["modules/ArticlesMethods.js","pages/ArticlesMainPage/ArticlesMainPageListItem.js","pages/ArticlesMainPage/ArticlesMainPageList.js","pages/ArticlesMainPage/ArticlesMainPage.js","pages/ArticlesCreator/ArticlesCreator.js","components/ArticlesNavbar.js","pages/ArticlePage/ArticlePage.js","App.js","serviceWorker.js","index.js"],"names":["articlesGenerate","localStorage","getItem","setItem","JSON","stringify","parse","articles","saveArticlesStorage","articlesList","getArticleId","length","id","ArticlesMainPageListItem","props","title","author","text","date","category","comments","randomPhoto","className","md","hover","waves","src","alt","href","icon","to","color","size","onClick","onDelete","console","log","ArticlesMainPageList","useState","articlesStorage","setArticlesStorage","deleteArticleHandler","filteredArticles","filter","item","deleteArticle","map","article","Fragment","key","ArticlesMainPage","ArticlesCreator","setTitle","setText","setCategory","history","useHistory","onSubmit","e","preventDefault","Date","toLocaleDateString","push","createArticle","label","group","type","validate","error","success","onChange","target","value","initialValue","init","height","menubar","plugins","toolbar","getContent","options","placeholder","isSearchable","ArticlesNavbar","isOpen","setIsOpen","dark","expand","navbar","left","nav","caret","fab","right","basic","ArticlePage","match","params","reverse","cascade","overlay","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3462f97a.chunk.js","sourcesContent":["export const articlesGenerate = () => {\n    if (!localStorage.getItem('articlesStorage')) {\n        localStorage.setItem('articlesStorage', JSON.stringify([]));\n    }\n    return JSON.parse(localStorage.getItem('articlesStorage'));\n};\n\nexport let articles = articlesGenerate();\n\nexport const createArticle = (title, text, category) => {\n    const article = {\n        id: getArticleId(),\n        title,\n        author: 'user',\n        text,\n        date: new Date().toLocaleDateString(),\n        category,\n        comments: []\n    };\n    articles.push(article);\n    saveArticlesStorage(articles);\n};\n\nexport const deleteArticle = id => {\n    const filteredArticles = articles.filter(item => {\n        return item.id !== id\n    });\n    saveArticlesStorage(filteredArticles);\n};\n\nexport const saveArticlesStorage = articlesList => {\n    localStorage.setItem('articlesStorage', JSON.stringify(articlesList));\n};\n\nconst getArticleId = () => articles.length > 0 ? articles[articles.length-1].id+1 : 0;\n","import React from 'react';\nimport {MDBRow, MDBCol, MDBView, MDBIcon, MDBBtn, MDBNavLink} from \"mdbreact\";\nimport {deleteArticle} from \"../../modules/ArticlesMethods\";\n\nexport const ArticlesMainPageListItem = props => {\n    const {id, title, author, text, date, category, comments} = props;\n\n    const randomPhoto = `https://picsum.photos/500/300?random=${id}`;\n    return (\n            <MDBRow className='mt-5 text-left'>\n                <MDBCol md='5'>\n                    <MDBView className=\"rounded z-depth-2\" hover waves>\n                        <img\n                            className=\"img-fluid\"\n                            src={randomPhoto}\n                            alt=\"\"\n                        />\n                    </MDBView>\n                </MDBCol>\n                <MDBCol md='7' className='d-flex flex-column justify-content-between position-relative'>\n                    <a href=\"#!\" className=\"light-blue-text\">\n                        <h6 className=\"font-weight-bold mb-3\">\n                            {/*<MDBIcon icon=\"utensils\" className=\"pr-2\"/>*/}\n                            {category}\n                        </h6>\n                    </a>\n                    <h3 className=\"font-weight-bold mb-3 p-0\">\n                        <strong>{title}</strong>\n                    </h3>\n                    <p>\n                        {text}\n                    </p>\n                    <p>\n                        <a href=\"#!\">\n                            <strong>{author}</strong>\n                        </a>\n                        , {date}\n                        , <MDBIcon icon=\"comment-alt\"/> {comments.length}\n                    </p>\n                    <MDBNavLink className='w-100' to={'/article/'+id}>\n                        <MDBBtn\n                            color=\"blue\"\n                            size=\"md\"\n                            className=\"mb-lg-0 mb-4 waves-light\"\n                        >\n                            Читать далее&nbsp;\n                            <MDBIcon icon=\"long-arrow-alt-right\"/>\n                        </MDBBtn>\n                    </MDBNavLink>\n                    <MDBIcon\n                        icon=\"times\"\n                        className='deleteArticle'\n                        onClick={() => {\n                            props.onDelete(id);\n                            console.log('clicked',id)\n                        }}\n                    />\n                </MDBCol>\n            </MDBRow>\n    )\n};","import React, {useState, useEffect} from 'react';\nimport {articles, articlesGenerate, deleteArticle, saveArticlesStorage} from \"../../modules/ArticlesMethods\";\nimport {ArticlesMainPageListItem} from \"./ArticlesMainPageListItem\";\n\nexport const ArticlesMainPageList = () => {\n    const [articlesStorage, setArticlesStorage] = useState(articles);\n    const deleteArticleHandler = id => {\n        deleteArticle(id)\n        setArticlesStorage(articlesGenerate());\n        console.log(`Удалена статья с id ${id}`)\n    };\n    return (\n        articlesStorage.length ?\n            articlesStorage.map(article => {\n                const {id, title, author, text, date, category, comments} = article;\n                return (\n                    <React.Fragment key={id}>\n                        <ArticlesMainPageListItem\n                            id={id}\n                            key={id}\n                            title={title}\n                            author={author}\n                            text={text}\n                            date={date}\n                            category={category}\n                            comments={comments}\n                            onDelete={deleteArticleHandler}\n                        />\n                        {articlesStorage[id+1] ? <hr className=\"my-5\"/> : null}\n                    </React.Fragment>\n                )\n            })\n            : <h2>Статей нет!</h2>\n    )\n};","import React from 'react';\nimport {ArticlesMainPageList} from \"./ArticlesMainPageList\";\nimport {MDBContainer} from \"mdbreact\";\n\nexport const ArticlesMainPage = () => {\n\n    return (\n        <MDBContainer className='mt-5 text-center ArticlesMainPageListItem'>\n            <h1>Список статей:</h1>\n            <ArticlesMainPageList/>\n        </MDBContainer>\n    )\n\n};","import React, {useState} from 'react';\nimport {MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody} from 'mdbreact';\nimport {Editor} from '@tinymce/tinymce-react';\nimport Select from 'react-select';\nimport { useHistory } from \"react-router-dom\";\nimport {createArticle} from \"../../modules/ArticlesMethods\";\n\nexport const ArticlesCreator = () => {\n    const options = [\n        {label: 'Путешествия', value: 'Путешествия'},\n        {label: 'Природа', value: 'Природа'},\n        {label: 'IT', value: 'IT'},\n        {label: 'Бизнес', value: 'Бизнес'},\n        {label: 'Отдых', value: 'Отдых'}\n    ];\n\n    const [title, setTitle] = useState('');\n    const [text, setText] = useState('');\n    const [category, setCategory] = useState();\n\n    const history= useHistory();\n    return (\n        <MDBContainer>\n            <MDBRow className='justify-content-center align-items-center'>\n                <MDBCol md=\"7\">\n                    <MDBCard>\n                        <MDBCardBody>\n                            <form onSubmit={e => {\n                                e.preventDefault();\n                                createArticle(title,text,category);\n                                history.push('/');\n                            }}>\n                                <p className=\"h4 text-center py-4\">Новая статья</p>\n                                <div className=\"grey-text\">\n                                    <MDBInput\n                                        label=\"Название статьи\"\n                                        group\n                                        type=\"text\"\n                                        validate\n                                        error=\"wrong\"\n                                        success=\"right\"\n                                        onChange={e => setTitle(e.target.value)}\n                                    />\n                                    <Editor\n                                        initialValue=\"\"\n                                        init={{\n                                            height: 250,\n                                            menubar: false,\n                                            plugins: [\n                                                'advlist autolink lists link image charmap print preview anchor',\n                                                'searchreplace visualblocks code fullscreen',\n                                                'insertdatetime media table paste code help wordcount'\n                                            ],\n                                            toolbar:\n                                                'undo redo | formatselect | bold italic backcolor | \\\n                                                alignleft aligncenter alignright alignjustify | \\\n                                                bullist numlist outdent indent | removeformat | help'\n                                        }}\n                                        onChange={e => setText(e.target.getContent())}\n                                    />\n                                    <Select\n                                        onChange={e => setCategory(e.value)}\n                                        options={options}\n                                        className='mt-5'\n                                        placeholder='Выберите категорию'\n                                        isSearchable='true'\n                                    />\n                                </div>\n                                <div className=\"text-center py-4 mt-3\">\n                                    <MDBBtn color=\"cyan\" type=\"submit\">\n                                        Создать\n                                    </MDBBtn>\n                                </div>\n                            </form>\n                        </MDBCardBody>\n                    </MDBCard>\n                </MDBCol>\n            </MDBRow>\n        </MDBContainer>\n    )\n};","import React, {useState} from 'react';\nimport {\n    MDBNavbar,\n    MDBNavbarBrand,\n    MDBNavbarNav,\n    MDBNavItem,\n    MDBNavLink,\n    MDBNavbarToggler,\n    MDBCollapse,\n    MDBIcon,\n    MDBDropdownItem, MDBDropdownMenu, MDBDropdownToggle, MDBDropdown\n} from \"mdbreact\";\n\nexport const ArticlesNavbar = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    // const githubName = `tabatintores`;\n\n    return (\n        <MDBNavbar color=\"blue-gradient\" dark expand=\"md\">\n            <MDBNavbarBrand>\n                <strong className=\"white-text\">BLOG</strong>\n            </MDBNavbarBrand>\n            <MDBNavbarToggler onClick={() => setIsOpen(!isOpen)}/>\n            <MDBCollapse id=\"navbarCollapse3\" isOpen={isOpen} navbar>\n                <MDBNavbarNav left>\n                    <MDBNavItem>\n                        <MDBNavLink to=\"/\"><MDBIcon icon=\"home\"/> Домой</MDBNavLink>\n                    </MDBNavItem>\n                    <MDBNavItem>\n                        <MDBNavLink to=\"/create\"><MDBIcon icon=\"plus\"/> Создать статью</MDBNavLink>\n                    </MDBNavItem>\n                    <MDBNavItem>\n                        <MDBDropdown>\n                            <MDBDropdownToggle nav caret>\n                                <MDBIcon fab icon=\"github\"/>\n                            </MDBDropdownToggle>\n                            <MDBDropdownMenu right basic className=\"dropdown-default\">\n                                <MDBDropdownItem href=\"#!\">Action</MDBDropdownItem>\n                                <MDBDropdownItem href=\"#!\">Another Action</MDBDropdownItem>\n                                <MDBDropdownItem href=\"#!\">Something else here</MDBDropdownItem>\n                                <MDBDropdownItem href=\"#!\">Something else here</MDBDropdownItem>\n                            </MDBDropdownMenu>\n                        </MDBDropdown>\n                    </MDBNavItem>\n                </MDBNavbarNav>\n            </MDBCollapse>\n        </MDBNavbar>\n    )\n};","import React,{useState} from 'react';\nimport {articles} from \"../../modules/ArticlesMethods\";\nimport { MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBMask, MDBIcon, MDBView, MDBBtn } from \"mdbreact\";\n\nexport const ArticlePage = props => {\n    let [article,setArticle] = useState(() => {\n        for (let item of articles) {\n            if (item.id === +props.match.params.id) {\n                return item;\n            }\n        }\n    });\n\n    return (\n        <MDBCard className=\"my-5 px-5 pb-5\">\n            <MDBCardBody>\n                <MDBRow>\n                    <MDBCol md=\"12\">\n                        <MDBCard reverse>\n                            <MDBView hover cascade waves>\n                                <img\n                                    src=\"https://picsum.photos/1000/500\"\n                                    alt=\"\"\n                                    className=\"img-fluid\"\n                                />\n                                <MDBMask overlay=\"white-slight\" className=\"waves-light\" />\n                            </MDBView>\n                            <MDBCardBody cascade className=\"text-center\">\n                                <h2 className=\"font-weight-bold\">\n                                    {article.title}\n                                </h2>\n                                <p>\n                                    <a href=\"#!\">\n                                        <strong>{article.author}</strong>\n                                    </a>\n                                    , {article.date}\n                                </p>\n                                <MDBBtn color='warning' className=\"waves-light\">\n                                    <MDBIcon icon=\"pen\" className='pr-2'/>\n                                    Редактировать\n                                </MDBBtn>\n                                <MDBBtn color='red' className=\"waves-light\">\n                                    <MDBIcon icon=\"times\" className='pr-2'/>\n                                    Удалить\n                                </MDBBtn>\n                            </MDBCardBody>\n                        </MDBCard>\n                        <MDBContainer className=\"mt-5\">\n                            {article.text}\n                        </MDBContainer>\n                    </MDBCol>\n                </MDBRow>\n            </MDBCardBody>\n        </MDBCard>\n    )\n};","import React from 'react';\nimport './style.sass';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport {ArticlesMainPage} from \"./pages/ArticlesMainPage/ArticlesMainPage\";\nimport {ArticlesCreator} from \"./pages/ArticlesCreator/ArticlesCreator\";\nimport {ArticlesNavbar} from \"./components/ArticlesNavbar\";\nimport {ArticlePage} from \"./pages/ArticlePage/ArticlePage\";\n\nconst App = () => {\n  return (\n      <BrowserRouter>\n          <div className=\"container-fluid pl-0 pr-0\">\n              <ArticlesNavbar />\n              <Switch>\n                  <Route exact path='/' component={ArticlesMainPage} />\n                  <Route path='/create' component={ArticlesCreator} />\n                  <Route path='/article/:id' component={ArticlePage} />\n              </Switch>\n          </div>\n      </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}