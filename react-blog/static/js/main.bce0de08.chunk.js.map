{"version":3,"sources":["modules/ArticlesMethods.js","components/ArticlesMainPage/ArticlesMainPageListItem.js","components/ArticlesMainPage/ArticlesMainPageList.js","components/ArticlesMainPage/ArticlesMainPage.js","components/ArticlesCreator/ArticlesCreator.js","components/ArticlesNavbar.js","components/ArticlePage/ArticlePage.js","App.js","serviceWorker.js","index.js"],"names":["articlesGenerate","JSON","parse","localStorage","getItem","articles","saveArticlesStorage","articlesList","setItem","stringify","getArticleId","length","id","ArticlesMainPageListItem","props","title","author","text","date","category","comments","randomPhoto","className","md","hover","waves","src","alt","href","icon","to","color","size","onClick","onDelete","toast","success","pauseOnHover","ArticlesMainPageList","useState","articlesStorage","setArticlesStorage","deleteArticleHandler","filteredArticles","filter","item","deleteArticle","map","article","Fragment","key","replace","toastHandler","ArticlesMainPage","ArticlesCreator","setTitle","setText","setCategory","articleData","history","useHistory","onSubmit","e","preventDefault","articleObj","Date","toLocaleDateString","push","createArticle","info","label","group","type","validate","error","onChange","target","value","required","initialValue","init","height","menubar","plugins","toolbar","getContent","options","placeholder","isSearchable","ArticlesNavbar","isOpen","setIsOpen","dark","expand","navbar","left","nav","caret","fab","right","basic","ArticlePage","match","params","reverse","cascade","dangerouslySetInnerHTML","__html","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4LA0BaA,G,WAAmB,kBAAMC,KAAKC,MAAMC,aAAaC,QAAQ,oBAAsB,QAEjFC,EAAWL,IAwBTM,EAAsB,SAAAC,GAC/BJ,aAAaK,QAAQ,kBAAmBP,KAAKQ,UAAUF,IACvDF,EAAWL,KAGTU,EAAe,kBAAML,EAASM,OAAS,EAAIN,EAASA,EAASM,OAAO,GAAGC,GAAG,EAAI,G,eCrDvEC,EAA2B,SAAAC,GAAS,IAEtCF,EAA+CE,EAA/CF,GAAGG,EAA4CD,EAA5CC,MAAMC,EAAsCF,EAAtCE,OAAOC,EAA+BH,EAA/BG,KAAKC,EAA0BJ,EAA1BI,KAAKC,EAAqBL,EAArBK,SAASC,EAAYN,EAAZM,SACpCC,EAAW,gDAA4CT,GAE7D,OACI,oCACI,kBAAC,IAAD,CAAQU,UAAU,kBACd,kBAAC,IAAD,CAAQC,GAAG,KACP,kBAAC,IAAD,CAASD,UAAU,oBAAoBE,OAAK,EAACC,OAAK,GAC9C,yBACIH,UAAU,YACVI,IAAKL,EACLM,IAAI,OAIhB,kBAAC,IAAD,CAAQJ,GAAG,IAAID,UAAU,gEACrB,uBAAGM,KAAK,KAAKN,UAAU,mBACnB,wBAAIA,UAAU,yBAETH,IAGT,wBAAIG,UAAU,6BACV,gCAASP,IAEb,2BACKE,GAEL,2BACI,uBAAGW,KAAK,MACJ,gCAASZ,IAFjB,KAIOE,EAJP,KAKM,kBAAC,IAAD,CAASW,KAAK,gBALpB,IAKqCT,EAAST,QAE9C,kBAAC,IAAD,CAAYW,UAAU,QAAQQ,GAAI,YAAclB,GAC5C,kBAAC,IAAD,CACImB,MAAM,OACNC,KAAK,KACLV,UAAU,4BAHd,0EAMI,kBAAC,IAAD,CAASO,KAAK,2BAGtB,kBAAC,IAAD,CACIA,KAAK,QACLP,UAAU,yBACVP,MAAM,6CACNkB,QAAS,WACLnB,EAAMoB,SAAStB,GACfuB,IAAMC,QAAQ,mFAAmB,CAC7BC,cAAc,OAI1B,kBAAC,IAAD,CACIR,KAAK,MACLP,UAAU,wBACVP,MAAM,iFACNkB,QAAS,mBC9DpBK,EAAuB,SAAAxB,GAAU,IAAD,EACKyB,mBAASlC,GADd,mBAClCmC,EADkC,KACjBC,EADiB,KAEnCC,EAAuB,SAAA9B,IFuCJ,SAAAA,GACzB,IAAM+B,EAAmBtC,EAASuC,QAAO,SAAAC,GACrC,OAAOA,EAAKjC,KAAOA,KAEvBN,EAAoBqC,GE1ChBG,CAAclC,GACd6B,EAAmBpC,IAEvB,OACImC,EAAgB7B,OACZ6B,EAAgBO,KAAI,SAAAC,GAAY,IACrBpC,EAAqDoC,EAArDpC,GAAIG,EAAiDiC,EAAjDjC,MAAOC,EAA0CgC,EAA1ChC,OAAQC,EAAkC+B,EAAlC/B,KAAMC,EAA4B8B,EAA5B9B,KAAMC,EAAsB6B,EAAtB7B,SAAUC,EAAY4B,EAAZ5B,SAChD,OACI,kBAAC,IAAM6B,SAAP,CAAgBC,IAAKtC,GACjB,kBAAC,EAAD,CACIU,UAAU,2BACVV,GAAIA,EACJsC,IAAKtC,EACLG,MAAOA,EACPC,OAAQA,EACRC,KAAMA,EAAKkC,QAAQ,cAAc,IACjCjC,KAAMA,EACNC,SAAUA,EACVC,SAAUA,EACVc,SAAUQ,EACVU,aAActC,EAAMsC,eAExB,wBAAI9B,UAAU,aAIxB,yFC5BD+B,G,MAAmB,WAC5B,OACI,oCACI,kBAAC,IAAD,CAAc/B,UAAU,6CACpB,0GACA,kBAAC,EAAD,U,gBCFHgC,EAAkB,WAC3B,IADiC,EASPf,mBAAS,IATF,mBAS1BxB,EAT0B,KASnBwC,EATmB,OAUThB,mBAAS,IAVA,mBAU1BtB,EAV0B,KAUpBuC,EAVoB,OAWDjB,qBAXC,mBAW1BpB,EAX0B,KAWhBsC,EAXgB,KAa3BC,EAAc,CAChB3C,QACAE,OACAE,YAIEwC,EAASC,cACf,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQtC,UAAU,6CACd,kBAAC,IAAD,CAAQC,GAAG,KACP,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,0BAAMsC,SAAU,SAAAC,GACZA,EAAEC,iBJNL,SAAAC,GAAe,IACjCjD,EAAuBiD,EAAvBjD,MAAME,EAAiB+C,EAAjB/C,KAAKE,EAAY6C,EAAZ7C,SACZ6B,EAAU,CACZpC,GAAIF,IACJK,QACAC,OAAQ,OACRC,OACAC,MAAM,IAAI+C,MAAOC,qBACjB/C,WACAC,SAAU,IAEdf,EAAS8D,KAAKnB,GACd1C,EAAoBD,GIJQ+D,CAAcV,GACdC,EAAQQ,KAAK,KACbhC,IAAMkC,KAAK,mFAAmB,CAC1BhC,cAAc,MAGlB,uBAAGf,UAAU,uBAAb,wEACA,yBAAKA,UAAU,aACX,kBAAC,IAAD,CACIgD,MAAM,wFACNC,OAAK,EACLC,KAAK,OACLC,UAAQ,EACRC,MAAM,QACNtC,QAAQ,QACRuC,SAAU,SAAAb,GAAC,OAAIP,EAASO,EAAEc,OAAOC,QACjCC,UAAQ,IAEZ,kBAAC,IAAD,CACIC,aAAa,GACbC,KAAM,CACFC,OAAQ,IACRC,SAAS,EACTC,QAAS,CACL,iEACA,6CACA,wDAEJC,QACI,2PAIRT,SAAU,SAAAb,GACNN,EAAQM,EAAEc,OAAOS,iBAGzB,kBAAC,IAAD,CACIV,SAAU,SAAAb,GAAC,OAAIL,EAAYK,EAAEe,QAC7BS,QApEpB,CACZ,CAAChB,MAAO,qEAAeO,MAAO,sEAC9B,CAACP,MAAO,6CAAWO,MAAO,8CAC1B,CAACP,MAAO,KAAMO,MAAO,MACrB,CAACP,MAAO,uCAAUO,MAAO,wCACzB,CAACP,MAAO,iCAASO,MAAO,mCAgEQvD,UAAU,OACViE,YAAY,0GACZC,aAAa,UAGrB,yBAAKlE,UAAU,yBACX,kBAAC,IAAD,CAAQS,MAAM,OAAOyC,KAAK,UAA1B,sDCvEvBiB,EAAiB,WAAO,IAAD,EACJlD,oBAAS,GADL,mBACzBmD,EADyB,KACjBC,EADiB,KAIhC,OACI,kBAAC,IAAD,CAAW5D,MAAM,eAAe6D,MAAI,EAACC,OAAO,MACxC,kBAAC,IAAD,KACI,4BAAQvE,UAAU,cAAlB,SAEJ,kBAAC,IAAD,CAAkBW,QAAS,kBAAM0D,GAAWD,MAC5C,kBAAC,IAAD,CAAa9E,GAAG,kBAAkB8E,OAAQA,EAAQI,QAAM,GACpD,kBAAC,IAAD,CAAcC,MAAI,GACd,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAYjE,GAAG,KAAI,kBAAC,IAAD,CAASD,KAAK,SAAjC,oCAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAYC,GAAG,WAAU,kBAAC,IAAD,CAASD,KAAK,SAAvC,qFAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAmBmE,KAAG,EAACC,OAAK,GACxB,kBAAC,IAAD,CAASC,KAAG,EAACrE,KAAK,YAEtB,kBAAC,IAAD,CAAiBsE,OAAK,EAACC,OAAK,EAAC9E,UAAU,oBACnC,kBAAC,IAAD,CAAiBM,KAAK,MAAtB,UACA,kBAAC,IAAD,CAAiBA,KAAK,MAAtB,kBACA,kBAAC,IAAD,CAAiBA,KAAK,MAAtB,uBACA,kBAAC,IAAD,CAAiBA,KAAK,MAAtB,8BCpCnByE,EAAc,SAAAvF,GAAU,IAAD,EACLyB,oBAAS,WAAO,IAAD,uBACtC,YAAiBlC,EAAjB,+CAA2B,CAAC,IAAnBwC,EAAkB,QACvB,GAAIA,EAAKjC,MAAQE,EAAMwF,MAAMC,OAAO3F,GAChC,OAAOiC,GAHuB,sFADV,mBAC3BG,EAD2B,UAShC,OACI,kBAAC,IAAD,CAAS1B,UAAU,kBACf,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,GAAG,MACP,kBAAC,IAAD,CAASiF,SAAO,GACZ,kBAAC,IAAD,CAAaC,SAAO,EAACnF,UAAU,eAC3B,wBAAIA,UAAU,oBACT0B,EAAQjC,OAEb,2BACI,uBAAGa,KAAK,KACJ,gCAASoB,EAAQhC,SAFzB,KAIOgC,EAAQ9B,MAEf,kBAAC,IAAD,CAAQa,MAAM,UAAUT,UAAU,eAC9B,kBAAC,IAAD,CAASO,KAAK,MAAMP,UAAU,SADlC,kFAIA,kBAAC,IAAD,CAAQS,MAAM,MAAMT,UAAU,eAC1B,kBAAC,IAAD,CAASO,KAAK,QAAQP,UAAU,SADpC,gDAMR,kBAAC,IAAD,CAAcA,UAAU,OAAOoF,wBAAyB,CAACC,OAAO3D,EAAQ/B,a,gBCXjF2F,EAjBH,WACV,OACI,kBAAC,IAAD,KACI,yBAAKtF,UAAU,6BACX,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOuF,OAAK,EAACC,KAAK,IAAIC,UAAW1D,IACjC,kBAAC,IAAD,CAAOyD,KAAK,UAAUC,UAAWzD,IACjC,kBAAC,IAAD,CAAOwD,KAAK,eAAeC,UAAWV,MAG9C,kBAAC,IAAD,MACA,kBAAC,QAAD,QCXUW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASb,MACvB,2D,qBCVNc,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.bce0de08.chunk.js","sourcesContent":["export class Articles {\r\n\r\n    static create(article) {\r\n        return fetch(`https://react-blog-53c57.firebaseio.com/articles.json`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(article),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            article.id = response.name;\r\n            console.log(article);\r\n            return article\r\n        })\r\n        .then(addToLocalStorage)\r\n    }\r\n}\r\n\r\nconst addToLocalStorage = article => {\r\n    const articlesStorage = articlesGenerate();\r\n    articlesStorage.push(article);\r\n    saveArticlesStorage(articlesStorage);\r\n};\r\n\r\nexport const articlesGenerate = () => JSON.parse(localStorage.getItem('articlesStorage') || '[]');\r\n\r\nexport let articles = articlesGenerate();\r\n\r\nexport const createArticle = articleObj => {\r\n    const {title,text,category} = articleObj;\r\n    const article = {\r\n        id: getArticleId(),\r\n        title,\r\n        author: 'user',\r\n        text,\r\n        date: new Date().toLocaleDateString(),\r\n        category,\r\n        comments: []\r\n    };\r\n    articles.push(article);\r\n    saveArticlesStorage(articles);\r\n};\r\n\r\nexport const deleteArticle = id => {\r\n    const filteredArticles = articles.filter(item => {\r\n        return item.id !== id\r\n    });\r\n    saveArticlesStorage(filteredArticles);\r\n};\r\n\r\nexport const saveArticlesStorage = articlesList => {\r\n    localStorage.setItem('articlesStorage', JSON.stringify(articlesList));\r\n    articles = articlesGenerate();\r\n};\r\n\r\nconst getArticleId = () => articles.length > 0 ? articles[articles.length-1].id+1 : 0;\r\n","import React from 'react';\r\nimport {MDBRow, MDBCol, MDBView, MDBIcon, MDBBtn, MDBNavLink} from \"mdbreact\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nexport const ArticlesMainPageListItem = props => {\r\n    // eslint-disable-next-line react/prop-types\r\n    const {id,title,author,text,date,category,comments} = props;\r\n    const randomPhoto = `https://picsum.photos/1000/600?random=${id}`\r\n\r\n    return (\r\n        <>\r\n            <MDBRow className='mt-5 text-left'>\r\n                <MDBCol md='5'>\r\n                    <MDBView className=\"rounded z-depth-2\" hover waves>\r\n                        <img\r\n                            className=\"img-fluid\"\r\n                            src={randomPhoto}\r\n                            alt=\"\"\r\n                        />\r\n                    </MDBView>\r\n                </MDBCol>\r\n                <MDBCol md='7' className='d-flex flex-column justify-content-between position-relative'>\r\n                    <a href=\"#!\" className=\"light-blue-text\">\r\n                        <h6 className=\"font-weight-bold mb-3\">\r\n                            {/*<MDBIcon icon=\"utensils\" className=\"pr-2\"/>*/}\r\n                            {category}\r\n                        </h6>\r\n                    </a>\r\n                    <h3 className=\"font-weight-bold mb-3 p-0\">\r\n                        <strong>{title}</strong>\r\n                    </h3>\r\n                    <p>\r\n                        {text}\r\n                    </p>\r\n                    <p>\r\n                        <a href=\"#!\">\r\n                            <strong>{author}</strong>\r\n                        </a>\r\n                        , {date}\r\n                        , <MDBIcon icon=\"comment-alt\"/> {comments.length}\r\n                    </p>\r\n                    <MDBNavLink className='w-100' to={'/article/' + id}>\r\n                        <MDBBtn\r\n                            color=\"blue\"\r\n                            size=\"md\"\r\n                            className=\"mb-lg-0 mb-4 waves-light\"\r\n                        >\r\n                            Читать далее&nbsp;\r\n                            <MDBIcon icon=\"long-arrow-alt-right\"/>\r\n                        </MDBBtn>\r\n                    </MDBNavLink>\r\n                    <MDBIcon\r\n                        icon=\"times\"\r\n                        className='deleteArticle red-text'\r\n                        title='Удалить'\r\n                        onClick={() => {\r\n                            props.onDelete(id);\r\n                            toast.success('Статья удалена!', {\r\n                                pauseOnHover: false\r\n                            });\r\n                        }}\r\n                    />\r\n                    <MDBIcon\r\n                        icon=\"pen\"\r\n                        className='editArticle gray-text'\r\n                        title='Редактировать'\r\n                        onClick={() => {\r\n                            // props.onDelete(id);\r\n                        }}\r\n                    />\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n};\r\n","import React, {useState, useEffect} from 'react';\r\nimport {articles, deleteArticle} from \"../../modules/ArticlesMethods\";\r\nimport {ArticlesMainPageListItem} from \"./ArticlesMainPageListItem\";\r\n\r\nexport const ArticlesMainPageList = props => {\r\n    const [articlesStorage, setArticlesStorage] = useState(articles);\r\n    const deleteArticleHandler = id => {\r\n        deleteArticle(id);\r\n        setArticlesStorage(articles);\r\n    };\r\n    return (\r\n        articlesStorage.length ?\r\n            articlesStorage.map(article => {\r\n                const {id, title, author, text, date, category, comments} = article;\r\n                return (\r\n                    <React.Fragment key={id}>\r\n                        <ArticlesMainPageListItem\r\n                            className=\"ArticlesMainPageListItem\"\r\n                            id={id}\r\n                            key={id}\r\n                            title={title}\r\n                            author={author}\r\n                            text={text.replace(/<\\/?[^>]+>/g,'')}\r\n                            date={date}\r\n                            category={category}\r\n                            comments={comments}\r\n                            onDelete={deleteArticleHandler}\r\n                            toastHandler={props.toastHandler}\r\n                        />\r\n                        <hr className=\"my-5\"/>\r\n                    </React.Fragment>\r\n                )\r\n            })\r\n            : <h2>Статей нет!</h2>\r\n    )\r\n};","import React from 'react';\r\nimport {ArticlesMainPageList} from \"./ArticlesMainPageList\";\r\nimport {MDBContainer} from \"mdbreact\";\r\nimport \"./ArticlesMainPage.sass\"\r\n\r\nexport const ArticlesMainPage = () => {\r\n    return (\r\n        <>\r\n            <MDBContainer className='mt-5 text-center ArticlesMainPageListItem'>\r\n                <h1>Список статей:</h1>\r\n                <ArticlesMainPageList/>\r\n            </MDBContainer>\r\n        </>\r\n    )\r\n\r\n};\r\n","import React, {useState} from 'react';\r\nimport {MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody} from 'mdbreact';\r\nimport {Editor} from '@tinymce/tinymce-react';\r\nimport Select from 'react-select';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {createArticle} from \"../../modules/ArticlesMethods\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nexport const ArticlesCreator = () => {\r\n    const options = [\r\n        {label: 'Путешествия', value: 'Путешествия'},\r\n        {label: 'Природа', value: 'Природа'},\r\n        {label: 'IT', value: 'IT'},\r\n        {label: 'Бизнес', value: 'Бизнес'},\r\n        {label: 'Отдых', value: 'Отдых'}\r\n    ];\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [text, setText] = useState('');\r\n    const [category, setCategory] = useState();\r\n\r\n    const articleData = {\r\n        title,\r\n        text,\r\n        category\r\n    };\r\n\r\n\r\n    const history= useHistory();\r\n    return (\r\n        <MDBContainer>\r\n            <MDBRow className='justify-content-center align-items-center'>\r\n                <MDBCol md=\"7\">\r\n                    <MDBCard>\r\n                        <MDBCardBody>\r\n                            <form onSubmit={e => {\r\n                                e.preventDefault();\r\n                                // Articles.create(articleData);\r\n                                createArticle(articleData);\r\n                                history.push('/');\r\n                                toast.info('Статья создана!', {\r\n                                    pauseOnHover: false\r\n                                });\r\n                            }}>\r\n                                <p className=\"h4 text-center py-4\">Новая статья:</p>\r\n                                <div className=\"grey-text\">\r\n                                    <MDBInput\r\n                                        label=\"Название статьи\"\r\n                                        group\r\n                                        type=\"text\"\r\n                                        validate\r\n                                        error=\"wrong\"\r\n                                        success=\"right\"\r\n                                        onChange={e => setTitle(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                    <Editor\r\n                                        initialValue=\"\"\r\n                                        init={{\r\n                                            height: 250,\r\n                                            menubar: false,\r\n                                            plugins: [\r\n                                                'advlist autolink lists link image charmap print preview anchor',\r\n                                                'searchreplace visualblocks code fullscreen',\r\n                                                'insertdatetime media table paste code help wordcount'\r\n                                            ],\r\n                                            toolbar:\r\n                                                'undo redo | formatselect | bold italic backcolor | \\\r\n                                                alignleft aligncenter alignright alignjustify | \\\r\n                                                bullist numlist outdent indent | removeformat | help'\r\n                                        }}\r\n                                        onChange={e => {\r\n                                            setText(e.target.getContent());\r\n                                        }}\r\n                                    />\r\n                                    <Select\r\n                                        onChange={e => setCategory(e.value)}\r\n                                        options={options}\r\n                                        className='mt-5'\r\n                                        placeholder='Выберите категорию'\r\n                                        isSearchable='true'\r\n                                    />\r\n                                </div>\r\n                                <div className=\"text-center py-4 mt-3\">\r\n                                    <MDBBtn color=\"cyan\" type=\"submit\">\r\n                                        Создать\r\n                                    </MDBBtn>\r\n                                </div>\r\n                            </form>\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </MDBContainer>\r\n    )\r\n};\r\n","import React, {useState} from 'react';\r\nimport {\r\n    MDBNavbar,\r\n    MDBNavbarBrand,\r\n    MDBNavbarNav,\r\n    MDBNavItem,\r\n    MDBNavLink,\r\n    MDBNavbarToggler,\r\n    MDBCollapse,\r\n    MDBIcon,\r\n    MDBDropdownItem, MDBDropdownMenu, MDBDropdownToggle, MDBDropdown\r\n} from \"mdbreact\";\r\n\r\nexport const ArticlesNavbar = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    // const githubName = `tabatintores`;\r\n\r\n    return (\r\n        <MDBNavbar color=\"unique-color\" dark expand=\"md\">\r\n            <MDBNavbarBrand>\r\n                <strong className=\"white-text\">BLOG</strong>\r\n            </MDBNavbarBrand>\r\n            <MDBNavbarToggler onClick={() => setIsOpen(!isOpen)}/>\r\n            <MDBCollapse id=\"navbarCollapse3\" isOpen={isOpen} navbar>\r\n                <MDBNavbarNav left>\r\n                    <MDBNavItem>\r\n                        <MDBNavLink to=\"/\"><MDBIcon icon=\"home\"/> Домой</MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                        <MDBNavLink to=\"/create\"><MDBIcon icon=\"plus\"/> Создать статью</MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                        <MDBDropdown>\r\n                            <MDBDropdownToggle nav caret>\r\n                                <MDBIcon fab icon=\"github\"/>\r\n                            </MDBDropdownToggle>\r\n                            <MDBDropdownMenu right basic className=\"dropdown-default\">\r\n                                <MDBDropdownItem href=\"#!\">Action</MDBDropdownItem>\r\n                                <MDBDropdownItem href=\"#!\">Another Action</MDBDropdownItem>\r\n                                <MDBDropdownItem href=\"#!\">Something else here</MDBDropdownItem>\r\n                                <MDBDropdownItem href=\"#!\">Something else here</MDBDropdownItem>\r\n                            </MDBDropdownMenu>\r\n                        </MDBDropdown>\r\n                    </MDBNavItem>\r\n                </MDBNavbarNav>\r\n            </MDBCollapse>\r\n        </MDBNavbar>\r\n    )\r\n};\r\n","import React,{useState} from 'react';\r\nimport {articles} from \"../../modules/ArticlesMethods\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBMask, MDBIcon, MDBView, MDBBtn } from \"mdbreact\";\r\n\r\nexport const ArticlePage = props => {\r\n    let [article,setArticle] = useState(() => {\r\n        for (let item of articles) {\r\n            if (item.id === +props.match.params.id) {\r\n                return item;\r\n            }\r\n        }\r\n    });\r\n\r\n    return (\r\n        <MDBCard className=\"my-5 px-5 pb-5\">\r\n            <MDBCardBody>\r\n                <MDBRow>\r\n                    <MDBCol md=\"12\">\r\n                        <MDBCard reverse>\r\n                            <MDBCardBody cascade className=\"text-center\">\r\n                                <h2 className=\"font-weight-bold\">\r\n                                    {article.title}\r\n                                </h2>\r\n                                <p>\r\n                                    <a href=\"#\">\r\n                                        <strong>{article.author}</strong>\r\n                                    </a>\r\n                                    , {article.date}\r\n                                </p>\r\n                                <MDBBtn color='warning' className=\"waves-light\">\r\n                                    <MDBIcon icon=\"pen\" className='pr-2'/>\r\n                                    Редактировать\r\n                                </MDBBtn>\r\n                                <MDBBtn color='red' className=\"waves-light\">\r\n                                    <MDBIcon icon=\"times\" className='pr-2'/>\r\n                                    Удалить\r\n                                </MDBBtn>\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                        <MDBContainer className=\"mt-5\" dangerouslySetInnerHTML={{__html:article.text}} />\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </MDBCardBody>\r\n        </MDBCard>\r\n    )\r\n};","import React from 'react';\r\nimport './style.sass';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport {ArticlesMainPage} from \"./components/ArticlesMainPage/ArticlesMainPage\";\r\nimport {ArticlesCreator} from \"./components/ArticlesCreator/ArticlesCreator\";\r\nimport {ArticlesNavbar} from \"./components/ArticlesNavbar\";\r\nimport {ArticlePage} from \"./components/ArticlePage/ArticlePage\";\r\nimport {ToastContainer} from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {Sugar} from 'react-preloaders';\r\n\r\nconst App = () => {\r\n  return (\r\n      <BrowserRouter>\r\n          <div className=\"container-fluid pl-0 pr-0\">\r\n              <ArticlesNavbar />\r\n              <Switch>\r\n                  <Route exact path='/' component={ArticlesMainPage} />\r\n                  <Route path='/create' component={ArticlesCreator} />\r\n                  <Route path='/article/:id' component={ArticlePage} />\r\n              </Switch>\r\n          </div>\r\n          <ToastContainer/>\r\n          <Sugar/>\r\n      </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}